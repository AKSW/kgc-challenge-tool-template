'@id': http://example.com/cases/${TOOLNAME}/${NAME}
name: '${TOOLNAME}: ${NAME2}'
description: Transform data into N-Triples with ${TOOLNAME}
steps:
- '@id': http://example.com/cases/${TOOLNAME}/${NAME}#step0
  name: Generate CSV-RML mapping
  resource: ${TOOLRESOURCE}
  command: execute
  parameters:
    command: integrate
    arguments:
    - mapping.r2rml.ttl
    - |
      PREFIX rml: <http://semweb.mmlab.be/ns/rml#>
      PREFIX rr:  <http://www.w3.org/ns/r2rml#>
      DELETE {
        ?map rr:logicalTable ?src .
        ?src rr:tableName ?name .
      }
      INSERT {
        ?map rml:logicalSource ?src .
        ?src rml:source ?nameCsv ;
             rml:referenceFormulation  <http://semweb.mmlab.be/ns/ql#CSV> .
      }
      WHERE {
        ?map rr:logicalTable ?src .
        ?src rr:tableName ?name .
        bind(concat(?name,'.csv') as ?nameCsv)
      }
    - |
      PREFIX rml: <http://semweb.mmlab.be/ns/rml#>
      PREFIX rr:  <http://www.w3.org/ns/r2rml#>
      DELETE { ?map rr:column ?column . }
      INSERT { ?map rml:reference ?column . }
      WHERE { ?map rr:column ?column }
    - spo.rq
    - --out-file=mapping.csvrml.ttl
- '@id': http://example.com/cases/${TOOLNAME}/${NAME}#step1
  if: ${NAME} = empty-values/*
  name: Configure NULL value dialect
  resource: ${TOOLRESOURCE}
  command: execute
  parameters:
    command: integrate
    arguments:
    - mapping.csvrml.ttl
    - |
      PREFIX rml: <http://semweb.mmlab.be/ns/rml#>
      PREFIX rr:  <http://www.w3.org/ns/r2rml#>
      PREFIX csvw: <http://www.w3.org/ns/csvw#>
      DELETE {
        ?src rml:source ?nameCsv .
      }
      INSERT {
        ?src rml:source [
             csvw:url ?nameCsv ;
             csvw:null "NULL" ;
        ] .
      }
      WHERE {
        ?src rml:source ?nameCsv ;
             rml:referenceFormulation  <http://semweb.mmlab.be/ns/ql#CSV> .
      }
    - spo.rq
    - --out-file=mapping.csvrml.ttl
- '@id': http://example.com/cases/${TOOLNAME}/${NAME}#step2
  name: Transform mapping into Sparql Query
  resource: ${TOOLRESOURCE}
  command: execute
  parameters:
    command: rmltk rml to sparql
    arguments: [ mapping.csvrml.ttl, --out-file=mapping.csvrml.rq, --out-overwrite ]
- '@id': http://example.com/cases/${TOOLNAME}/${NAME}#step3
  name: Optimise Sparql Query
  resource: ${TOOLRESOURCE}
  command: execute
  parameters:
    command: rmltk optimize workload
    arguments: [ mapping.csvrml.rq, --no-order, --out-file=mapping.csvrml.optimised.rq, --out-overwrite ]
- '@id': http://example.com/cases/${TOOLNAME}/${NAME}#step4
  if: ${TOOLNAME} = rpt-sansa
  name: Transform data into RDF
  resource: ${TOOLRESOURCE}
  command: execute
  parameters:
    command: sansa query
    arguments:
    - mapping.csvrml.optimised.rq
    - --out-file=out.nt
    - --out-overwrite
- '@id': http://example.com/cases/${TOOLNAME}/${NAME}#step4
  if: ${TOOLNAME} = rpt-arq
  name: Transform data into RDF
  resource: ${TOOLRESOURCE}
  command: execute
  parameters:
    command: integrate
    arguments:
    - mapping.csvrml.optimised.rq
    - --out-file=out.nt
